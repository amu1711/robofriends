{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mMAgBgBA,EAdH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACI,cAAC,WAAD,UACA,sBAAKC,UAAW,+CAAhB,UACA,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,cAC5B,gCACQ,6BAAKC,IACL,4BAAIC,aCSGI,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACvC,OACI,cAAC,EAAD,CACIX,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHVS,MAMf,OACI,8BACSH,KCJFI,EATG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKX,UAAY,MAAjB,SACA,uBAAQA,UAAY,mCACpBY,KAAO,OAAOC,YAAY,gBAC1BC,SAAYH,OCMLI,EAVF,SAACC,GACV,OACA,qBAAKC,MAAO,CAAEC,UAAW,UAAWC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YC2CAC,E,kDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAcc,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CAChBxB,OAAS,GACVM,YAAa,IAJA,E,qDAQb,WAAoB,IAAD,OACfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACrB,OAAS6B,S,oBAQ1C,WACI,MAA8BC,KAAKN,MAA5BxB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACTyB,EAAiB/B,EAAOgC,QAAO,SAAAhC,GACjC,OAAOA,EAAON,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEzD,OAAQjC,EAAOmC,OAGhB,sBAAKvC,UAAY,KAAjB,UACI,6CACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC3B,cAAC,EAAD,UACP,cAAC,EAAD,CAAUnB,OAAU+B,SANnB,gD,GA1BSK,aCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAEdC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6b401955.chunk.js","sourcesContent":["import React from 'react';\r\nimport  {Fragment} from \"react\";\r\nconst Card = ({id,name,email}) => {\r\n    return(\r\n        <Fragment>\r\n        <div className ='bg-light-green dib br3 pa3 grow bw2 shadow-5'>\r\n        <img alt='photo' src={`https://robohash.org/${id}?200x200`}/>\r\n<div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n</div>\r\n        </div>\r\n        </Fragment>\r\n        \r\n    );\r\n}\r\n export default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user,i) => {\r\n    return(\r\n        <Card key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}/>\r\n        );\r\n    })\r\n    return(\r\n        <div>\r\n                {cardComponent}\r\n            </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return(\r\n        <div className = 'pa2'>\r\n        <input  className = 'pa3 ba b--green bg-lightest-blue'\r\n        type = \"text\" placeholder=\"Search robots\"\r\n        onChange = {searchChange}/>\r\n        </div>\r\n    )\r\n};\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props) => {\r\n    return(\r\n    <div style={{ overflowY: 'scroll ', border: '2px solid black', height: '800px' }}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n        \r\n    \r\n    \r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll.js';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n     robots : [],\r\n    searchfield: \"\"\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users =>this.setState({robots : users}));\r\n    \r\n    }\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield : event.target.value}) \r\n        }\r\n      \r\n    \r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        }) \r\n         return !robots.length ?\r\n         <h1>Loading...</h1>:\r\n        (\r\n        <div className = 'tc'>\r\n            <h1>Robofriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}></SearchBox>\r\n               <Scroll>\r\n        <CardList robots = {filteredRobots}/>\r\n               </Scroll>\r\n        </div>       \r\n    ); \r\n        }\r\n        }\r\n        \r\n    \r\n\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>,\n                \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}